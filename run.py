# -*- coding: utf-8 -*-

import unittest
import os
import time
from read_cfg import InitConfig
from read_test_suites import getTestSuite
from run_icc import RunICC
from core_test_icc import TestICC
from _ParametrizedTestCase import ParametrizedTestCase
from HTMLTestRunner import HTMLTestRunner


if __name__ == '__main__':

    try:
        project_version = 'v1.0.0'
        print '>>>ICC automation test project ' + project_version
        # read base cofig file, will raise some error if cfg file not well.
        core_config = InitConfig().run()
        cfg_file = core_config.cfg_file_info
        ctxInstance = RunICC(cfg_file.defaults())
        TestSuiteList = getTestSuite(core_config)
        suite = unittest.TestSuite()
        tests = []
        for tc in TestSuiteList:
            param_wrapper = {}
            param_wrapper['tc'] = tc
            param_wrapper['ctx'] = ctxInstance
            param_wrapper['cfg'] = cfg_file
            tests.append(ParametrizedTestCase.parametrize(
                TestICC, param=param_wrapper))

        suite.addTests(tests)
        report_file = core_config.cur_path + core_config.cur_sep + \
            'reports' + core_config.cur_sep + 'ICCTestReport.html'

        # print report_file

        with open(report_file, 'w') as f:
            runner = HTMLTestRunner(stream=f,
                                    title='ICC Test Report',
                                    description='generated by HTMLTestRunner.',
                                    verbosity=2
                                    )
            runner.run(suite)
    except RuntimeError:
        print '>>>[RuntimeError]'
    finally:
        print '>>>[Script done.]'
        time.sleep(2)
        os.startfile(report_file)
